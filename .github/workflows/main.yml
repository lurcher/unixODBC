on: [ push, pull_request, workflow_dispatch ]

permissions:
  contents: read

jobs:
  Test:
    strategy:
      matrix:
        platform: [
          { cc: gcc,   MAKE_EXTRAFLAGS: "AM_MAKEFLAGS=CFLAGS=-Werror" },
          { cc: clang, MAKE_EXTRAFLAGS: "" }
        ]
      fail-fast: false
    name: ${{ matrix.platform.cc }}
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        options: >-
          --health-cmd "healthcheck.sh --connect --innodb_initialized" 
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
    - uses: actions/checkout@v4
    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libltdl-dev odbc-mariadb odbc-postgresql
    - name: configure
      run: |
        autoreconf -iv
        CC=${{ matrix.platform.cc }} CFLAGS="-ggdb -fsanitize=address" ./configure --prefix=/usr
    - name: build
      run: |
        make ${{ matrix.platform.MAKE_EXTRAFLAGS }}
        sudo make install
    - name: mariadb smoke test
      run: |
        sudo -E ./exe/.libs/odbcinst -i -d -f .github/MariaDB_odbc_driver_template.ini
        ./exe/.libs/odbcinst  -i -s -h -f .github/MariaDB_odbc_data_source_template.ini
        echo 'SELECT VERSION();' | ./exe/.libs/isql -v MariaDB-server -b
    - name: postgres smoke test
      run: |
        ./exe/.libs/odbcinst  -i -s -h -f .github/postgres_odbc.ini 
        echo 'SELECT VERSION();' | ./exe/.libs/isql -v PostgreSQL-server -b


